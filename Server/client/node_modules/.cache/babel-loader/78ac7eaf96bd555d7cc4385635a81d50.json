{"ast":null,"code":"var _jsxFileName = \"/Users/surbhitdubey/Sites/react/Server/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginService from '../services/LoginService';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport Message from '../elements/Message';\nimport Error from '../elements/Error';\nimport Logo from './logo.jpg';\nimport { COMMON_FIELDS, REGISTRATION_FIELDS, LOGIN_FIELDS, LOGIN_MESSAGE, ERROR_IN_LOGIN } from '../MessageBundle';\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChangeUserName = e => {\n      this.setState({\n        user_name: e.target.value\n      });\n    };\n\n    this.handleOnChangePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      const data = {\n        user_name: this.state.user_name,\n        password: this.state.password\n      };\n      const loginResult = await LoginService(data);\n\n      if (loginResult !== 200) {\n        this.setState({\n          error: true,\n          loginSuccess: false\n        });\n      } else this.setState({\n        loginSuccess: true,\n        error: false\n      });\n    };\n\n    this.state = {\n      user_name: '',\n      password: '',\n      error: false,\n      loginSuccess: false\n    };\n  }\n\n  render() {\n    const {\n      loginSuccess,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: Logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \" \", LOGIN_FIELDS.LOGIN_HEADING, \" \"), \" \", ' '), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \" \", COMMON_FIELDS.USER_NAME, \" \"), \"    \", ' ', /*#__PURE__*/React.createElement(Form.input, {\n      type: \"text\",\n      name: \"Username\",\n      onChange: this.handleOnChangeUserName,\n      autoComplete: \"Username\",\n      iconPosition: \"left\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), ' ', ' ', ' ', /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \" \", COMMON_FIELDS.PASSWORD, \" \"), \"    \", ' ', /*#__PURE__*/React.createElement(Form.input, {\n      type: \"password\",\n      name: \"Password\",\n      fluid: true,\n      icon: \"lock\",\n      onChange: this.handleOnChangePassword,\n      autoComplete: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }), ' ', ' ', ' ', ' ', ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      type: \"button\",\n      onClick: this.onSubmit,\n      fluid: true,\n      size: \"large\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, ' ', LOGIN_FIELDS.LOGIN, \"    \", ' '), ' ', /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, REGISTRATION_FIELDS.REGISTER, \" \"), \"  \", ' ', ' ', ' ', ' ', ' ', ' '), ' ', loginSuccess && /*#__PURE__*/React.createElement(Message, {\n      message: LOGIN_MESSAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 30\n      }\n    }), \"    \", ' ', error && /*#__PURE__*/React.createElement(Error, {\n      message: ERROR_IN_LOGIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }), \"    \", ' ')));\n  }\n\n}","map":{"version":3,"sources":["/Users/surbhitdubey/Sites/react/Server/client/src/components/Login.js"],"names":["React","Component","Link","LoginService","Button","Form","Grid","Header","Image","Segment","Message","Error","Logo","COMMON_FIELDS","REGISTRATION_FIELDS","LOGIN_FIELDS","LOGIN_MESSAGE","ERROR_IN_LOGIN","Login","constructor","props","handleOnChangeUserName","e","setState","user_name","target","value","handleOnChangePassword","password","onSubmit","data","state","loginResult","error","loginSuccess","render","height","maxWidth","LOGIN_HEADING","USER_NAME","PASSWORD","LOGIN","REGISTER"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginService from '../services/LoginService';\nimport {Button, Form, Grid,Header, Image, Segment} from 'semantic-ui-react'\nimport Message from '../elements/Message';\nimport Error from '../elements/Error';\nimport Logo from './logo.jpg';\nimport {\n  COMMON_FIELDS,\n  REGISTRATION_FIELDS,\n  LOGIN_FIELDS,\n  LOGIN_MESSAGE,\n  ERROR_IN_LOGIN,\n} from '../MessageBundle';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user_name: '',\n      password: '',\n      error: false,\n      loginSuccess: false,\n    };\n  }\n\n  handleOnChangeUserName = (e) => {\n    this.setState({\n      user_name: e.target.value,\n    });\n  };\n\n  handleOnChangePassword = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  onSubmit = async (e) => {\n    const data = {\n      user_name: this.state.user_name,\n      password: this.state.password,\n    };\n    const loginResult = await LoginService(data);\n    if (loginResult !== 200) {\n      this.setState({\n        error: true,\n        loginSuccess: false,\n      });\n    } else\n      this.setState({\n        loginSuccess: true,\n        error: false,\n      });\n  };\n\n  render() {\n    const { loginSuccess, error } = this.state;\n\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{maxWidth:450}}>\n          <Header as ='h2' color ='teal' textAlign='center'>\n            < Image src = {Logo} />\n            <h1> {LOGIN_FIELDS.LOGIN_HEADING} </h1> {' '}\n            </Header>\n          <Form onSubmit={this.onSubmit} size='large'>\n          <Segment stacked>\n              <p> {COMMON_FIELDS.USER_NAME} </p>    {' '}\n              <Form.input\n                type=\"text\"\n                name=\"Username\"\n                onChange={this.handleOnChangeUserName}\n                autoComplete=\"Username\"\n                iconPosition = 'left'\n                required\n              />\n            {' '}\n            {' '}\n              {' '}\n              <p> {COMMON_FIELDS.PASSWORD} </p>    {' '}\n              <Form.input\n                type=\"password\"\n                name=\"Password\"\n                fluid icon = 'lock'\n                onChange={this.handleOnChangePassword}\n                autoComplete=\"Password\"\n                required\n              />{' '}\n                  {' '}\n                  {' '}\n            {' '}\n\n              {' '}\n              <Button\n              color='teal'\n                type=\"button\"\n                onClick={this.onSubmit}\n                fluid size = 'large'\n                className=\"btn btn-primary\"\n              >\n                {' '}\n                  {LOGIN_FIELDS.LOGIN}    {' '}\n              </Button>{' '}\n                  <Link to=\"/register\">\n                     {REGISTRATION_FIELDS.REGISTER} </Link>  {' '}\n               {' '}\n            {' '}\n               {' '}\n          {' '}\n           {' '}\n        </Segment>{' '}\n            {loginSuccess && <Message message={LOGIN_MESSAGE} />}    {' '}\n        {error && <Error message={ERROR_IN_LOGIN} />}    {' '}\n      </Form>\n      </Grid.Column>\n      </Grid>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}